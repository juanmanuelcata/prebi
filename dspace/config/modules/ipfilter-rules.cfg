#list of rules
ipFilter.rules = susana

#marcar los ips detectados como bots
markBots = false

liliana.ruleType = RegularAccess
#intervalo en dias
liliana.interval = 1
liliana.startDate = 2015-04-01
liliana.endDate = 2016-04-01


#AccessInTime Example
#ait.ruleType = AccessInTime
#ait.startDate = yyyy-mm-dd
#ait.endDate = yyyy-mm-dd
#ait.type = 0
#ait.count = 30
#ait.weights = 100=.7
#ait.gap = 1		"gap" indica en horas la cantidad de subdivisiones del periodo que se analiza. 
#			si el valor de gap es 0 se analiza el per√≠odo entre startDate y endDate sin subdividirlo,


#rules

#AccessInTime
susana.ruleType = AccessInTime
susana.startDate = 2016-01-01
susana.endDate = 2016-06-01
susana.type = 0|1|2
susana.count = 30
susana.weights = 100=.7
susana.gap = 1

#UAChecker
pepo.ruleType = UAChecker
pepo.substr = bing, Bing, baidu, Baidu, googlebot, Googlebot


#SubnetSearch
pancho.ruleType = SubnetSearch
#cantidad de veces minima que se debe repetir la ip para ser considerada
pancho.cant = 3
pancho.weights = 20=.7

#whitelist
ipFilter.whitelist = 163.10.34.*

#list of rules to be executed automatically
#ruleSet.{set_name}.rules = {rules_list}
ruleSet.toribio.rules = edgardo, pepo

edgardo.ruleType = AccessInTime
edgardo.startDate = 2015-06-01
edgardo.endDate = 2016-06-01
edgardo.type = 2
edgardo.count = 60
edgardo.weights = 100=.7, 200=.9
edgardo.gap. = 1
